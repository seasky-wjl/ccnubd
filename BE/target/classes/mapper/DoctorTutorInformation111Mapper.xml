<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ccnu.mapper.DoctorTutorInformation111Mapper" >
  <resultMap id="BaseResultMap" type="com.ccnu.pojo.DoctorTutorInformation111" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="tutor_identification_code" property="tutorIdentificationCode" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="college" property="college" jdbcType="VARCHAR" />
    <result column="country" property="country" jdbcType="VARCHAR" />
    <result column="type_of_certificate" property="typeOfCertificate" jdbcType="VARCHAR" />
    <result column="certificate_number" property="certificateNumber" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="nationality" property="nationality" jdbcType="VARCHAR" />
    <result column="political_status" property="politicalStatus" jdbcType="VARCHAR" />
    <result column="highest_education" property="highestEducation" jdbcType="VARCHAR" />
    <result column="obtain_highest_education_country" property="obtainHighestEducationCountry" jdbcType="VARCHAR" />
    <result column="institution_with_highest_degree" property="institutionWithHighestDegree" jdbcType="VARCHAR" />
    <result column="major_highest_degree" property="majorHighestDegree" jdbcType="VARCHAR" />
    <result column="highest_degree_level" property="highestDegreeLevel" jdbcType="VARCHAR" />
    <result column="name_by_highest_degree" property="nameByHighestDegree" jdbcType="VARCHAR" />
    <result column="country_with_the_highest_degree" property="countryWithTheHighestDegree" jdbcType="VARCHAR" />
    <result column="highest_degree_institution" property="highestDegreeInstitution" jdbcType="VARCHAR" />
    <result column="last_time" property="lastTime" jdbcType="VARCHAR" />
    <result column="isdelete" property="isdelete" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, tutor_identification_code, `name`, college, country, type_of_certificate, certificate_number, 
    birthday, sex, nationality, political_status, highest_education, obtain_highest_education_country, 
    institution_with_highest_degree, major_highest_degree, highest_degree_level, name_by_highest_degree, 
    country_with_the_highest_degree, highest_degree_institution, last_time, isdelete
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ccnu.pojo.DoctorTutorInformation111Example" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from doctor_tutor_information_1_1_1
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from doctor_tutor_information_1_1_1
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from doctor_tutor_information_1_1_1
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ccnu.pojo.DoctorTutorInformation111Example" >
    delete from doctor_tutor_information_1_1_1
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ccnu.pojo.DoctorTutorInformation111" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into doctor_tutor_information_1_1_1 (tutor_identification_code, `name`, college, 
      country, type_of_certificate, certificate_number, 
      birthday, sex, nationality, 
      political_status, highest_education, obtain_highest_education_country, 
      institution_with_highest_degree, major_highest_degree, 
      highest_degree_level, name_by_highest_degree, 
      country_with_the_highest_degree, highest_degree_institution, 
      last_time, isdelete)
    values (#{tutorIdentificationCode,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{college,jdbcType=VARCHAR}, 
      #{country,jdbcType=VARCHAR}, #{typeOfCertificate,jdbcType=VARCHAR}, #{certificateNumber,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{nationality,jdbcType=VARCHAR}, 
      #{politicalStatus,jdbcType=VARCHAR}, #{highestEducation,jdbcType=VARCHAR}, #{obtainHighestEducationCountry,jdbcType=VARCHAR}, 
      #{institutionWithHighestDegree,jdbcType=VARCHAR}, #{majorHighestDegree,jdbcType=VARCHAR}, 
      #{highestDegreeLevel,jdbcType=VARCHAR}, #{nameByHighestDegree,jdbcType=VARCHAR}, 
      #{countryWithTheHighestDegree,jdbcType=VARCHAR}, #{highestDegreeInstitution,jdbcType=VARCHAR}, 
      #{lastTime,jdbcType=VARCHAR}, #{isdelete,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ccnu.pojo.DoctorTutorInformation111" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into doctor_tutor_information_1_1_1
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tutorIdentificationCode != null" >
        tutor_identification_code,
      </if>
      <if test="name != null" >
        `name`,
      </if>
      <if test="college != null" >
        college,
      </if>
      <if test="country != null" >
        country,
      </if>
      <if test="typeOfCertificate != null" >
        type_of_certificate,
      </if>
      <if test="certificateNumber != null" >
        certificate_number,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="nationality != null" >
        nationality,
      </if>
      <if test="politicalStatus != null" >
        political_status,
      </if>
      <if test="highestEducation != null" >
        highest_education,
      </if>
      <if test="obtainHighestEducationCountry != null" >
        obtain_highest_education_country,
      </if>
      <if test="institutionWithHighestDegree != null" >
        institution_with_highest_degree,
      </if>
      <if test="majorHighestDegree != null" >
        major_highest_degree,
      </if>
      <if test="highestDegreeLevel != null" >
        highest_degree_level,
      </if>
      <if test="nameByHighestDegree != null" >
        name_by_highest_degree,
      </if>
      <if test="countryWithTheHighestDegree != null" >
        country_with_the_highest_degree,
      </if>
      <if test="highestDegreeInstitution != null" >
        highest_degree_institution,
      </if>
      <if test="lastTime != null" >
        last_time,
      </if>
      <if test="isdelete != null" >
        isdelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tutorIdentificationCode != null" >
        #{tutorIdentificationCode,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="college != null" >
        #{college,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="typeOfCertificate != null" >
        #{typeOfCertificate,jdbcType=VARCHAR},
      </if>
      <if test="certificateNumber != null" >
        #{certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="nationality != null" >
        #{nationality,jdbcType=VARCHAR},
      </if>
      <if test="politicalStatus != null" >
        #{politicalStatus,jdbcType=VARCHAR},
      </if>
      <if test="highestEducation != null" >
        #{highestEducation,jdbcType=VARCHAR},
      </if>
      <if test="obtainHighestEducationCountry != null" >
        #{obtainHighestEducationCountry,jdbcType=VARCHAR},
      </if>
      <if test="institutionWithHighestDegree != null" >
        #{institutionWithHighestDegree,jdbcType=VARCHAR},
      </if>
      <if test="majorHighestDegree != null" >
        #{majorHighestDegree,jdbcType=VARCHAR},
      </if>
      <if test="highestDegreeLevel != null" >
        #{highestDegreeLevel,jdbcType=VARCHAR},
      </if>
      <if test="nameByHighestDegree != null" >
        #{nameByHighestDegree,jdbcType=VARCHAR},
      </if>
      <if test="countryWithTheHighestDegree != null" >
        #{countryWithTheHighestDegree,jdbcType=VARCHAR},
      </if>
      <if test="highestDegreeInstitution != null" >
        #{highestDegreeInstitution,jdbcType=VARCHAR},
      </if>
      <if test="lastTime != null" >
        #{lastTime,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null" >
        #{isdelete,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ccnu.pojo.DoctorTutorInformation111Example" resultType="java.lang.Integer" >
    select count(*) from doctor_tutor_information_1_1_1
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update doctor_tutor_information_1_1_1
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tutorIdentificationCode != null" >
        tutor_identification_code = #{record.tutorIdentificationCode,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.college != null" >
        college = #{record.college,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null" >
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.typeOfCertificate != null" >
        type_of_certificate = #{record.typeOfCertificate,jdbcType=VARCHAR},
      </if>
      <if test="record.certificateNumber != null" >
        certificate_number = #{record.certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.nationality != null" >
        nationality = #{record.nationality,jdbcType=VARCHAR},
      </if>
      <if test="record.politicalStatus != null" >
        political_status = #{record.politicalStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.highestEducation != null" >
        highest_education = #{record.highestEducation,jdbcType=VARCHAR},
      </if>
      <if test="record.obtainHighestEducationCountry != null" >
        obtain_highest_education_country = #{record.obtainHighestEducationCountry,jdbcType=VARCHAR},
      </if>
      <if test="record.institutionWithHighestDegree != null" >
        institution_with_highest_degree = #{record.institutionWithHighestDegree,jdbcType=VARCHAR},
      </if>
      <if test="record.majorHighestDegree != null" >
        major_highest_degree = #{record.majorHighestDegree,jdbcType=VARCHAR},
      </if>
      <if test="record.highestDegreeLevel != null" >
        highest_degree_level = #{record.highestDegreeLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.nameByHighestDegree != null" >
        name_by_highest_degree = #{record.nameByHighestDegree,jdbcType=VARCHAR},
      </if>
      <if test="record.countryWithTheHighestDegree != null" >
        country_with_the_highest_degree = #{record.countryWithTheHighestDegree,jdbcType=VARCHAR},
      </if>
      <if test="record.highestDegreeInstitution != null" >
        highest_degree_institution = #{record.highestDegreeInstitution,jdbcType=VARCHAR},
      </if>
      <if test="record.lastTime != null" >
        last_time = #{record.lastTime,jdbcType=VARCHAR},
      </if>
      <if test="record.isdelete != null" >
        isdelete = #{record.isdelete,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update doctor_tutor_information_1_1_1
    set id = #{record.id,jdbcType=INTEGER},
      tutor_identification_code = #{record.tutorIdentificationCode,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      college = #{record.college,jdbcType=VARCHAR},
      country = #{record.country,jdbcType=VARCHAR},
      type_of_certificate = #{record.typeOfCertificate,jdbcType=VARCHAR},
      certificate_number = #{record.certificateNumber,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      nationality = #{record.nationality,jdbcType=VARCHAR},
      political_status = #{record.politicalStatus,jdbcType=VARCHAR},
      highest_education = #{record.highestEducation,jdbcType=VARCHAR},
      obtain_highest_education_country = #{record.obtainHighestEducationCountry,jdbcType=VARCHAR},
      institution_with_highest_degree = #{record.institutionWithHighestDegree,jdbcType=VARCHAR},
      major_highest_degree = #{record.majorHighestDegree,jdbcType=VARCHAR},
      highest_degree_level = #{record.highestDegreeLevel,jdbcType=VARCHAR},
      name_by_highest_degree = #{record.nameByHighestDegree,jdbcType=VARCHAR},
      country_with_the_highest_degree = #{record.countryWithTheHighestDegree,jdbcType=VARCHAR},
      highest_degree_institution = #{record.highestDegreeInstitution,jdbcType=VARCHAR},
      last_time = #{record.lastTime,jdbcType=VARCHAR},
      isdelete = #{record.isdelete,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ccnu.pojo.DoctorTutorInformation111" >
    update doctor_tutor_information_1_1_1
    <set >
      <if test="tutorIdentificationCode != null" >
        tutor_identification_code = #{tutorIdentificationCode,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="college != null" >
        college = #{college,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="typeOfCertificate != null" >
        type_of_certificate = #{typeOfCertificate,jdbcType=VARCHAR},
      </if>
      <if test="certificateNumber != null" >
        certificate_number = #{certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="nationality != null" >
        nationality = #{nationality,jdbcType=VARCHAR},
      </if>
      <if test="politicalStatus != null" >
        political_status = #{politicalStatus,jdbcType=VARCHAR},
      </if>
      <if test="highestEducation != null" >
        highest_education = #{highestEducation,jdbcType=VARCHAR},
      </if>
      <if test="obtainHighestEducationCountry != null" >
        obtain_highest_education_country = #{obtainHighestEducationCountry,jdbcType=VARCHAR},
      </if>
      <if test="institutionWithHighestDegree != null" >
        institution_with_highest_degree = #{institutionWithHighestDegree,jdbcType=VARCHAR},
      </if>
      <if test="majorHighestDegree != null" >
        major_highest_degree = #{majorHighestDegree,jdbcType=VARCHAR},
      </if>
      <if test="highestDegreeLevel != null" >
        highest_degree_level = #{highestDegreeLevel,jdbcType=VARCHAR},
      </if>
      <if test="nameByHighestDegree != null" >
        name_by_highest_degree = #{nameByHighestDegree,jdbcType=VARCHAR},
      </if>
      <if test="countryWithTheHighestDegree != null" >
        country_with_the_highest_degree = #{countryWithTheHighestDegree,jdbcType=VARCHAR},
      </if>
      <if test="highestDegreeInstitution != null" >
        highest_degree_institution = #{highestDegreeInstitution,jdbcType=VARCHAR},
      </if>
      <if test="lastTime != null" >
        last_time = #{lastTime,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null" >
        isdelete = #{isdelete,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ccnu.pojo.DoctorTutorInformation111" >
    update doctor_tutor_information_1_1_1
    set tutor_identification_code = #{tutorIdentificationCode,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      college = #{college,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      type_of_certificate = #{typeOfCertificate,jdbcType=VARCHAR},
      certificate_number = #{certificateNumber,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      nationality = #{nationality,jdbcType=VARCHAR},
      political_status = #{politicalStatus,jdbcType=VARCHAR},
      highest_education = #{highestEducation,jdbcType=VARCHAR},
      obtain_highest_education_country = #{obtainHighestEducationCountry,jdbcType=VARCHAR},
      institution_with_highest_degree = #{institutionWithHighestDegree,jdbcType=VARCHAR},
      major_highest_degree = #{majorHighestDegree,jdbcType=VARCHAR},
      highest_degree_level = #{highestDegreeLevel,jdbcType=VARCHAR},
      name_by_highest_degree = #{nameByHighestDegree,jdbcType=VARCHAR},
      country_with_the_highest_degree = #{countryWithTheHighestDegree,jdbcType=VARCHAR},
      highest_degree_institution = #{highestDegreeInstitution,jdbcType=VARCHAR},
      last_time = #{lastTime,jdbcType=VARCHAR},
      isdelete = #{isdelete,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>