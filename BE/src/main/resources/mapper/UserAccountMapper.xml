<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ccnu.mapper.UserAccountMapper" >
  <resultMap id="BaseResultMap" type="com.ccnu.pojo.UserAccount" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="passwd" property="passwd" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="INTEGER" />
    <result column="realname" property="realname" jdbcType="VARCHAR" />
    <result column="faculty" property="faculty" jdbcType="VARCHAR" />
    <result column="faculty_code" property="facultyCode" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMap" type="com.ccnu.pojo.vo.UserAccountVo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="INTEGER" />
    <result column="realname" property="realname" jdbcType="VARCHAR" />
    <result column="faculty" property="faculty" jdbcType="VARCHAR" />
    <result column="faculty_code" property="facultyCode" jdbcType="VARCHAR" />
    <result column="work_status" property="workStatus" jdbcType="VARCHAR" />
    <result column="account_status" property="accountStatus" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, username, passwd, `role`, realname, faculty, faculty_code
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ccnu.pojo.UserAccountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from user_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select * from user_account
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ccnu.pojo.UserAccountExample" >
    delete from user_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ccnu.pojo.UserAccount" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_account (username, passwd, `role`, 
      realname, faculty, faculty_code
      )
    values (#{username,jdbcType=VARCHAR}, #{passwd,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, 
      #{realname,jdbcType=VARCHAR}, #{faculty,jdbcType=VARCHAR}, #{facultyCode,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ccnu.pojo.UserAccount" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="username != null" >
        username,
      </if>
      <if test="passwd != null" >
        passwd,
      </if>
      <if test="role != null" >
        `role`,
      </if>
      <if test="realname != null" >
        realname,
      </if>
      <if test="faculty != null" >
        faculty,
      </if>
      <if test="facultyCode != null" >
        faculty_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null" >
        #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=INTEGER},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="faculty != null" >
        #{faculty,jdbcType=VARCHAR},
      </if>
      <if test="facultyCode != null" >
        #{facultyCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ccnu.pojo.UserAccountExample" resultType="java.lang.Integer" >
    select count(*) from user_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_account
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.passwd != null" >
        passwd = #{record.passwd,jdbcType=VARCHAR},
      </if>
      <if test="record.role != null" >
        `role` = #{record.role,jdbcType=INTEGER},
      </if>
      <if test="record.realname != null" >
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.faculty != null" >
        faculty = #{record.faculty,jdbcType=VARCHAR},
      </if>
      <if test="record.facultyCode != null" >
        faculty_code = #{record.facultyCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_account
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      passwd = #{record.passwd,jdbcType=VARCHAR},
      `role` = #{record.role,jdbcType=INTEGER},
      realname = #{record.realname,jdbcType=VARCHAR},
      faculty = #{record.faculty,jdbcType=VARCHAR},
      faculty_code = #{record.facultyCode,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ccnu.pojo.UserAccount" >
    update user_account
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null" >
        passwd = #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        `role` = #{role,jdbcType=INTEGER},
      </if>
      <if test="realname != null" >
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="faculty != null" >
        faculty = #{faculty,jdbcType=VARCHAR},
      </if>
      <if test="facultyCode != null" >
        faculty_code = #{facultyCode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ccnu.pojo.UserAccount" >
    update user_account
    set username = #{username,jdbcType=VARCHAR},
      passwd = #{passwd,jdbcType=VARCHAR},
      `role` = #{role,jdbcType=INTEGER},
      realname = #{realname,jdbcType=VARCHAR},
      faculty = #{faculty,jdbcType=VARCHAR},
      faculty_code = #{facultyCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="deleteUser" parameterType="java.lang.String" statementType="CALLABLE">
    {call deleteUser(#{tutorIdentificationCode,mode=IN})}
  </update>
  <select id="getAllUser" resultMap="com.ccnu.mapper.UserAccountMapper.ResultMap"
  parameterType="com.ccnu.pojo.dto.UserTypeDto">
    SELECT a.id,a.username,a.role,a.realname,a.faculty,a.faculty_code,b.work_status,b.account_status FROM user_account as a
    LEFT JOIN user_status as b ON b.user_id = a.id
    WHERE 1 =1
    <if test="role != null and role > 0">
            AND a.role = #{role}
    </if>
    <if test="facultyCode != null and facultyCode.trim().length() > 0">
            AND a.faculty_code = #{facultyCode}
    </if>
   </select>
</mapper>